* Python 自学
** flask 学习过程中练手代码 
*** mongodb 基本连接
#+BEGIN_EXAMPLE
    运行环境: python3.5
    代码文件夹:mongodb_test  
    lib1(未使用ORM): pymongo, flask_script,  Manager
    lib2(使用ORM): flask_mongoengine, flask_script
    代码:mongodb_test 
#+END_EXAMPLE
*** mySQL 连接
***** mySQL 服务器启动命令
#+BEGIN_EXAMPLE
  $ mysql.server start
  $ mysql.server stop
  $ mysql.server restart
#+END_EXAMPLE
***** mySQL 连接服务器 
#+BEGIN_EXAMPLE
  $ mysql -u root -p
if have password , then enter....
  $ yourpassword

#+END_EXAMPLE
需要pip安装 mysql-python ,不然连接不上MySQL， ubuntu下用Shell安装
#+BEGIN_SRC Bash
$sudo apt-get install libmysqld-dev
...

$pip install mysql-python

#+END_SRC
***** Change MySQL password
#+BEGIN_EXAMPLE

mysql> SET PASSWORD FOR 'tom'@'localhost' = PASSWORD('foobar');
mysql> FLUSH PRIVILEGES;
mysql> quit;

$ mysql -u tom -p
$ yourpassword

then login ok

#+END_EXAMPLE
***** mySQL 的ORM, json serialize
      #+BEGIN_EXAMPLE
       mysql_test 目录下： app.py, manager.py, modules.py 
       >>>python manager save
       ...
       >>> python manager query_all
      #+END_EXAMPLE
***** MySQL 中文乱码的solution
#+BEGIN_EXAMPLE

CREATE DATABASE mydb
  DEFAULT CHARACTER SET utf8
  DEFAULT COLLATE utf8_general_ci;
#+END_EXAMPLE
***** SqlAlchemy query 结果排序 desc
#+BEGIN_SRC python
class Hotnews(Resource):
    def get(self):
        from models import Pianonews
        return jsonify(pianonews = [item.serialize for item in Pianonews.query.order_by(desc(Pianonews.index))])
        #return jsonify(pianonews = [item.serialize for item in Pianonews.query.all()]) 


    def post(self):
        from models import Pianonews
        return jsonify(pianonews = [item.serialize for item in Pianonews.query.all()])
#+END_SRC
见 restful app.py文件
***** Mysql 更改表的Auto increment
#+BEGIN_SRC sql 
> ALTER TABLE `videoslist` CHANGE COLUMN `index` `index` INT(4) NOT NULL AUTO_INCREMENT;

or
> ALTER TABLE  `videoslist` ADD  `index` INT( 11 ) NOT NULL  PRIMARY KEY AUTO_INCREMENT FIRST
注意` ` 不是' '号
#+END_SRC
***** MySQL 的table名字区分大小写
可用下面SQL更改表名
#+BEGIN_SRC sql 
$: RENAME TABLE old_table TO new_table;
#+END_SRC
***** MySQL 创建Table
#+BEGIN_SRC SQL
CREATE TABLE `videoslisttest` (
  `index` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `cover` varchar(255) DEFAULT NULL,
  `mp4_url` varchar(255) DEFAULT NULL,
  `desc` varchar(1000) DEFAULT NULL,
  PRIMARY KEY (`index`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
#+END_SRC
*** Restful Demo
**** 使用到：flask_restful, reqparse, abort, Api, Resource
代码文件夹：restful 
*** 图片下载 Demo
**** 使用到 request, send_from_directory, abort == 
    #+BEGIN_EXAMPLE
    文件夹:picture 
    图片资源:picture/images/*.png
    using this link  to download file http://localhost:5000/images/image2.png
    #+END_EXAMPLE

*** 图片链接json格式返回 
**** flask_restful, send_from_directory ==
#+BEGIN_EXAMPLE
代码文件夹：restful -> jsonrestful.py
图片资源: restful -> images/xxx.jpg ==
#+END_EXAMPLE

**** WSGI服务器Gunicorn 启动app 命令
#+BEGIN_EXAMPLE
$gunicorn -b 0.0.0.0:8080 yourapp:app
#+END_EXAMPLE
**** flask返回HTML5的视频
#+BEGIN_EXAMPLE
Browser未能正常播放
#+END_EXAMPLE
** python版本相关
*** virtualenv 下指定python版本
#+BEGIN_SRC shell

$ sudo apt-get install python-pip
$ sudo apt-get install python-virtualenv

#+END_SRC

#+BEGIN_EXAMPLE
when create virtual environment, using shell command:
$ virtualenv --python=python2.7 venv
创建 venv
#+END_EXAMPLE

#+BEGIN_SRC bash
# //默认情况下，虚拟环境会依赖系统环境中的site packages，
#就是说系统中已经安装好的第三方package也会安装在虚拟环境中，如果不想依赖这些package，那么可以加上参数 --no-site-packages建立虚拟环境
$ virtualenv --no-site-package venv

#+END_SRC
** scrapy初试 
*** 简单的豆瓣网爬取:tutorial
**** 使用scrapy, python2.7
#+BEGIN_EXAMPLE
$scrapy crawl dmoz  
在项目主目录下执行 
#+END_EXAMPLE
 
*** Meizi网站图片爬取：Meizitu
**** 使用scrapy， python2.7, requests 
#+BEGIN_EXAMPLE
$ scrapy crawl meizi
#+END_EXAMPLE
** Nginx 配置参考
*** mime type
client请求的URL中，如带mime类型 nginx默认返回该类型。如（https://yourDomain/image/logo.jpeg） content-type : image/jpeg
在设置中加入 
#+BEGIN_EXAMPLE
location /image {
     include mime.types;
     types {
     # other type except mime.types;
     }

}
#+END_EXAMPLE
** Supervisorctl查看log 
*** display log in terminal realtime
#+BEGIN_SRC bash

#supervisorctl tail -f [your project name] stderr

#+END_SRC
*** path of log file for supervisor 
    #+BEGIN_EXAMPLE
    /var/log/supervisor
    in this dictionary, some name like: [your project name]-stderr---supervisor-TuNEf.log
    #+END_EXAMPLE
*** [[https:https://github.com/shadowsocks/shadowsocks/wiki/%25E7%2594%25A8-Supervisor-%25E8%25BF%2590%25E8%25A1%258C-Shadowsocks][参考文章]]

